/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.pablocompany.proyectono2lfp.frontend;

import com.pablocompany.proyectono2lfp.analizadorlexicorecursos.LectorEntradas;
import com.pablocompany.proyectono2lfp.backendswing.ColocarFondos;
import com.pablocompany.proyectono2lfp.backendswing.CrearTableros;
import com.pablocompany.proyectono2lfp.backendswing.ModificarTabla;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.SwingUtilities;

/**
 *
 * @author pablo
 */
public class ReporteSintactico extends javax.swing.JDialog {

    /**
     * Creates new form MostrarReportes
     */
    private LectorEntradas gestionLecturas;

    //Gestiona el reporte de conteo lexemas
    private ModificarTabla mdTablitaConteo;
    private CrearTableros crearTableroConteo;

    //Gestiona el reporte de tokenizacion de lexemas
    private ModificarTabla mdTablitaTokenizacion;
    private CrearTableros crearTableroTokenizacion;

    //Atributo que permite pasar por parametro el lexema seleccionado para graficar sus transiciones
//    private Lexema lexemaSeleccionado;

    public ReporteSintactico(java.awt.Frame parent, boolean modal, LectorEntradas gestorLecturas) {
        super(parent, modal);
        initComponents();

        this.setLocationRelativeTo(null);

        ColocarFondos pintarPanel = new ColocarFondos(this, this.panelPrincipal);
        ((JViewport) tableroConteoLexermas.getParent()).setBackground(new Color(0xF2D7B4));
        ((JViewport) tableroConteoTokens.getParent()).setBackground(new Color(0xF2D7B4));

        pintarPanel.pintarDialog("/com/pablocompany/proyectono1/recursosapp/images/overlay2.png");

        this.gestionLecturas = gestorLecturas;

        //this.lexemaSeleccionado = null;

        this.mdTablitaConteo = new ModificarTabla(this.tableroConteoLexermas);
        this.crearTableroConteo = new CrearTableros(this.tableroConteoLexermas);

        this.mdTablitaTokenizacion = new ModificarTabla(this.tableroConteoTokens);
        this.crearTableroTokenizacion = new CrearTableros(this.tableroConteoTokens);

      //  this.gestionLecturas.getGenerarReportes().reiniciarListas();

    }

    //Metodo que sirve para mandar a llamar la graficacion de los estados del automata
    public void ilustrarTransiciones() {
        //Se despliega la ventana emergente para La generacion de reportes
        /*DiagramaTransiciones dialog = new DiagramaTransiciones(this, true, lexemaSeleccionado);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {

            }
        });
        dialog.setVisible(true);*/

    }

    //Metodo que permite ilustrar el lexema encontrado
    private void marcarSeleccionLexemas() {
        /*if (this.lexemaSeleccionado == null) {
            return;
        }

        this.textFieldCadena.setText(this.lexemaSeleccionado.getLexema());

        this.textFieldToken.setText(this.lexemaSeleccionado.getEstadoAnalisis().getTipo());*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        lblReportes = new javax.swing.JLabel();
        panelErroes2 = new javax.swing.JPanel();
        jScrollTablero1 = new javax.swing.JScrollPane();
        tableroConteoLexermas = new javax.swing.JTable();
        btnReporteConteo = new javax.swing.JButton();
        lblConteoLexemas = new javax.swing.JLabel();
        lblConteoLexemas1 = new javax.swing.JLabel();
        jScrollTablero2 = new javax.swing.JScrollPane();
        tableroConteoTokens = new javax.swing.JTable();
        btnReportarToken = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Visualizacion de Reportes");
        setModal(true);

        lblReportes.setFont(new java.awt.Font("Liberation Serif", 1, 36)); // NOI18N
        lblReportes.setForeground(new java.awt.Color(83, 31, 11));
        lblReportes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReportes.setText("Reportes Analizador Sintactico:");

        panelErroes2.setBackground(new java.awt.Color(111, 176, 209));
        panelErroes2.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(50, 56, 68)));

        jScrollTablero1.setBackground(new java.awt.Color(242, 215, 180));
        jScrollTablero1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        tableroConteoLexermas.setBackground(new java.awt.Color(242, 215, 180));
        tableroConteoLexermas.setFont(new java.awt.Font("Liberation Serif", 0, 18)); // NOI18N
        tableroConteoLexermas.setForeground(new java.awt.Color(0, 0, 0));
        tableroConteoLexermas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableroConteoLexermas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableroConteoLexermas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableroConteoLexermas.setGridColor(new java.awt.Color(0, 0, 0));
        tableroConteoLexermas.setRowSelectionAllowed(false);
        tableroConteoLexermas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableroConteoLexermasMousePressed(evt);
            }
        });
        jScrollTablero1.setViewportView(tableroConteoLexermas);

        btnReporteConteo.setBackground(new java.awt.Color(0, 118, 0));
        btnReporteConteo.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        btnReporteConteo.setForeground(new java.awt.Color(229, 227, 227));
        btnReporteConteo.setText("Generar Reporte");
        btnReporteConteo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteConteoActionPerformed(evt);
            }
        });

        lblConteoLexemas.setFont(new java.awt.Font("Liberation Sans", 1, 28)); // NOI18N
        lblConteoLexemas.setForeground(new java.awt.Color(61, 29, 97));
        lblConteoLexemas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConteoLexemas.setText("Errores Sintacticos");

        lblConteoLexemas1.setFont(new java.awt.Font("Liberation Sans", 1, 28)); // NOI18N
        lblConteoLexemas1.setForeground(new java.awt.Color(61, 29, 97));
        lblConteoLexemas1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConteoLexemas1.setText("Tabla de Variables");

        jScrollTablero2.setBackground(new java.awt.Color(242, 215, 180));
        jScrollTablero2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        tableroConteoTokens.setBackground(new java.awt.Color(242, 215, 180));
        tableroConteoTokens.setFont(new java.awt.Font("Liberation Serif", 0, 18)); // NOI18N
        tableroConteoTokens.setForeground(new java.awt.Color(0, 0, 0));
        tableroConteoTokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableroConteoTokens.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableroConteoTokens.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableroConteoTokens.setGridColor(new java.awt.Color(0, 0, 0));
        tableroConteoTokens.setRowSelectionAllowed(false);
        tableroConteoTokens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableroConteoTokensMousePressed(evt);
            }
        });
        jScrollTablero2.setViewportView(tableroConteoTokens);

        btnReportarToken.setBackground(new java.awt.Color(0, 118, 0));
        btnReportarToken.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        btnReportarToken.setForeground(new java.awt.Color(229, 227, 227));
        btnReportarToken.setText("Generar Reporte");
        btnReportarToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportarTokenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelErroes2Layout = new javax.swing.GroupLayout(panelErroes2);
        panelErroes2.setLayout(panelErroes2Layout);
        panelErroes2Layout.setHorizontalGroup(
            panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelErroes2Layout.createSequentialGroup()
                .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelErroes2Layout.createSequentialGroup()
                        .addContainerGap(21, Short.MAX_VALUE)
                        .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblConteoLexemas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollTablero1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(panelErroes2Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(btnReporteConteo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelErroes2Layout.createSequentialGroup()
                        .addComponent(btnReportarToken, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(227, 227, 227))
                    .addGroup(panelErroes2Layout.createSequentialGroup()
                        .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollTablero2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblConteoLexemas1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(12, Short.MAX_VALUE))))
        );
        panelErroes2Layout.setVerticalGroup(
            panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelErroes2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConteoLexemas1)
                    .addComponent(lblConteoLexemas))
                .addGap(18, 18, 18)
                .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollTablero2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(jScrollTablero1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelErroes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReportarToken, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporteConteo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 1248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelErroes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReportes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelErroes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(panelPrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableroConteoLexermasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableroConteoLexermasMousePressed

        //Metodo que permite ubicar el lexema en el indice 
        try {

            int fila = this.tableroConteoLexermas.rowAtPoint(evt.getPoint());
            int columna = this.tableroConteoLexermas.columnAtPoint(evt.getPoint());

            if (fila > -1 && columna > -1) {

                if (SwingUtilities.isLeftMouseButton(evt)) {

                   /* if (this.gestionLecturas == null) {
                        JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (this.gestionLecturas.getGenerarReportes().reporteLexemasGenerado()) {
                        JOptionPane.showMessageDialog(this, "No se ha generado el reporte de lexemas\nPresione el boton en el \"Reporte Tokens Lexemas\"", "Reporte de lexemas no generado aun", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (this.gestionLecturas.getGenerarReportes().esVaciaListaLexemas()) {
                        JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    this.lexemaSeleccionado = this.gestionLecturas.getGenerarReportes().getLexemaSeleccionado(fila);
                    marcarSeleccionLexemas();*/

                }
            }

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_tableroConteoLexermasMousePressed

    private void btnReporteConteoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteConteoActionPerformed
        //Muestra el reporte en la tabla de conteo de lexemas
        try {

            if (this.gestionLecturas == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

           /* if (this.gestionLecturas.getGenerarReportes() == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                //Boton manual que permite generar el reporte de conteo de lexemas
                this.gestionLecturas.getGenerarReportes().generarReporteConteoLexemas(this.gestionLecturas.getLexerActual().getListadoSentencias(), this.mdTablitaConteo, this.crearTableroConteo);

            } catch (ErrorPuntualException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Inconveniente encontrado", JOptionPane.ERROR_MESSAGE);
            }*/

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnReporteConteoActionPerformed

    private void tableroConteoTokensMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableroConteoTokensMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableroConteoTokensMousePressed

    private void btnReportarTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportarTokenActionPerformed
        //Muestra el reporte en la tabla de conteo de lexemas en cantidad de veces que aparece
        try {

            if (this.gestionLecturas == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

           /* if (this.gestionLecturas.getGenerarReportes() == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                //Boton manual que permite generar el reporte de conteo de lexemas
                this.gestionLecturas.getGenerarReportes().generarReporteTokenizacionLexemas(this.gestionLecturas.getLexerActual().getListadoSentencias(), this.mdTablitaTokenizacion, this.crearTableroTokenizacion);

            } catch (ErrorPuntualException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Inconveniente encontrado", JOptionPane.ERROR_MESSAGE);
            }*/

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnReportarTokenActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReportarToken;
    private javax.swing.JButton btnReporteConteo;
    private javax.swing.JScrollPane jScrollTablero1;
    private javax.swing.JScrollPane jScrollTablero2;
    private javax.swing.JLabel lblConteoLexemas;
    private javax.swing.JLabel lblConteoLexemas1;
    private javax.swing.JLabel lblReportes;
    private javax.swing.JPanel panelErroes2;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tableroConteoLexermas;
    private javax.swing.JTable tableroConteoTokens;
    // End of variables declaration//GEN-END:variables
}
