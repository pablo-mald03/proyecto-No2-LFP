/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.pablocompany.proyectono2lfp.frontend;

import com.pablocompany.proyectono2lfp.analizadorlexicorecursos.LectorEntradas;
import com.pablocompany.proyectono2lfp.backendswing.ColocarFondos;
import com.pablocompany.proyectono2lfp.backendswing.CrearTableros;
import com.pablocompany.proyectono2lfp.backendswing.ModificarTabla;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JViewport;

/**
 *
 * @author pablo
 */
public class ReporteErrores extends javax.swing.JDialog {

    /**
     * Creates new form MostrarReportes
     */
    private LectorEntradas gestionLecturas;
    //Gestiona el reporte de errores
    private ModificarTabla mdTablitaErrores;
    private CrearTableros crearTableroErrores;

    public ReporteErrores(java.awt.Frame parent, boolean modal, LectorEntradas gestorLecturas) {
        super(parent, modal);
        initComponents();

        this.setLocationRelativeTo(null);

        ColocarFondos pintarPanel = new ColocarFondos(this, this.panelPrincipal);
        ((JViewport) tableroMuestraErrores.getParent()).setBackground(new Color(0xFAE1BB));

        pintarPanel.pintarDialog("/com/pablocompany/proyectono1/recursosapp/images/overlay2.png");


        this.gestionLecturas = gestorLecturas;

        this.mdTablitaErrores = new ModificarTabla(this.tableroMuestraErrores);
        this.crearTableroErrores = new CrearTableros(this.tableroMuestraErrores);
       // this.gestionLecturas.getGenerarReportes().reiniciarListas();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        lblReportes = new javax.swing.JLabel();
        panelErroes = new javax.swing.JPanel();
        jScrollTablero = new javax.swing.JScrollPane();
        tableroMuestraErrores = new javax.swing.JTable();
        lblAnalisis = new javax.swing.JLabel();
        btnExportarErroes = new javax.swing.JButton();
        btnGenerarErrores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Visualizar Reporte de errores");
        setModal(true);

        lblReportes.setFont(new java.awt.Font("Liberation Serif", 1, 36)); // NOI18N
        lblReportes.setForeground(new java.awt.Color(83, 31, 11));
        lblReportes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReportes.setText("Reportes Analizador Lexico:");

        panelErroes.setBackground(new java.awt.Color(111, 176, 209));
        panelErroes.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(50, 7, 39)));

        jScrollTablero.setBackground(new java.awt.Color(250, 225, 187));
        jScrollTablero.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        tableroMuestraErrores.setBackground(new java.awt.Color(250, 225, 187));
        tableroMuestraErrores.setFont(new java.awt.Font("Liberation Serif", 0, 18)); // NOI18N
        tableroMuestraErrores.setForeground(new java.awt.Color(0, 0, 0));
        tableroMuestraErrores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableroMuestraErrores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableroMuestraErrores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableroMuestraErrores.setGridColor(new java.awt.Color(0, 0, 0));
        tableroMuestraErrores.setRowSelectionAllowed(false);
        tableroMuestraErrores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableroMuestraErroresMousePressed(evt);
            }
        });
        jScrollTablero.setViewportView(tableroMuestraErrores);

        lblAnalisis.setFont(new java.awt.Font("Liberation Sans", 1, 30)); // NOI18N
        lblAnalisis.setForeground(new java.awt.Color(158, 13, 63));
        lblAnalisis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnalisis.setText("Reporte de Errores:");

        btnExportarErroes.setBackground(new java.awt.Color(66, 1, 61));
        btnExportarErroes.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        btnExportarErroes.setForeground(new java.awt.Color(221, 219, 219));
        btnExportarErroes.setText("Exportar Reporte");
        btnExportarErroes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarErroesActionPerformed(evt);
            }
        });

        btnGenerarErrores.setBackground(new java.awt.Color(0, 118, 0));
        btnGenerarErrores.setFont(new java.awt.Font("Liberation Sans", 1, 20)); // NOI18N
        btnGenerarErrores.setForeground(new java.awt.Color(229, 227, 227));
        btnGenerarErrores.setText("Generar Reporte");
        btnGenerarErrores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarErroresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelErroesLayout = new javax.swing.GroupLayout(panelErroes);
        panelErroes.setLayout(panelErroesLayout);
        panelErroesLayout.setHorizontalGroup(
            panelErroesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelErroesLayout.createSequentialGroup()
                .addGap(0, 39, Short.MAX_VALUE)
                .addComponent(jScrollTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(panelErroesLayout.createSequentialGroup()
                .addGroup(panelErroesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelErroesLayout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(btnGenerarErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(btnExportarErroes, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelErroesLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(lblAnalisis, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelErroesLayout.setVerticalGroup(
            panelErroesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelErroesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblAnalisis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollTablero, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addGap(36, 36, 36)
                .addGroup(panelErroesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerarErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportarErroes, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 1014, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelErroes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblReportes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelErroes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(panelPrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableroMuestraErroresMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableroMuestraErroresMousePressed

    }//GEN-LAST:event_tableroMuestraErroresMousePressed

    private void btnExportarErroesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarErroesActionPerformed

        try {
            if (this.gestionLecturas == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

           /* if (this.gestionLecturas.getGenerarReportes() == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                //Boton manual que permite exporter el reporte de erroes
                this.gestionLecturas.getGenerarReportes().generarReporteErrores();
                JOptionPane.showMessageDialog(this, "Reporte de Errores generado Correctamente\nCarpeta: /Reportes", "Reporte de Errores Generado", JOptionPane.INFORMATION_MESSAGE);
            } catch (ErrorPuntualException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de Exportacion", JOptionPane.ERROR_MESSAGE);
            }*/

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnExportarErroesActionPerformed

    private void btnGenerarErroresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarErroresActionPerformed

        try {

            if (this.gestionLecturas == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

           /* if (this.gestionLecturas.getGenerarReportes() == null) {
                JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador", "Texto Vacio", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                //Boton manual que permite generar el reporte de errores
                this.gestionLecturas.getGenerarReportes().generarReporteErrores(this.gestionLecturas.getLexerActual().getListadoSentencias(), this.mdTablitaErrores, this.crearTableroErrores);

            } catch (ErrorPuntualException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de Analisis", JOptionPane.ERROR_MESSAGE);
            }*/

        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No hay texto registrado en el analizador\nEscribe algo para poderlo analizar", "Texto Vacio", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnGenerarErroresActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportarErroes;
    private javax.swing.JButton btnGenerarErrores;
    private javax.swing.JScrollPane jScrollTablero;
    private javax.swing.JLabel lblAnalisis;
    private javax.swing.JLabel lblReportes;
    private javax.swing.JPanel panelErroes;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tableroMuestraErrores;
    // End of variables declaration//GEN-END:variables
}
